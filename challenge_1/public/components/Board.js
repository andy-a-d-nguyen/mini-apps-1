import Square from './Square.js';

class Board extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      squares: Array(9).fill(null)
    };
  }

  handleClick(i) {
    // make a copy of this.state.squares because we don't want to affect it directly
    const squares = this.state.squares.slice(); // assign 'X' to the squares that is clicked

    squares[i] = 'X'; // update this.state.squares with copy of this.state.squares

    this.setState({
      squares: squares
    });
  }

  renderSquare(i) {
    return /*#__PURE__*/React.createElement(Square, {
      value: this.state.squares[i],
      onClick: () => this.handleClick(i)
    });
  }

  render() {
    const status = 'Next Player: X';
    return /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement("div", {
      className: "status"
    }, status), /*#__PURE__*/React.createElement("div", {
      className: "row"
    }, this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)), /*#__PURE__*/React.createElement("div", {
      className: "row"
    }, this.renderSquare(4), this.renderSquare(5), this.renderSquare(6)), /*#__PURE__*/React.createElement("div", {
      className: "row"
    }, this.renderSquare(7), this.renderSquare(8), this.renderSquare(9)));
  }

}

export default Board;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2NsaWVudC9jb21wb25lbnRzL0JvYXJkLmpzeCJdLCJuYW1lcyI6WyJTcXVhcmUiLCJCb2FyZCIsIlJlYWN0IiwiQ29tcG9uZW50IiwiY29uc3RydWN0b3IiLCJwcm9wcyIsInN0YXRlIiwic3F1YXJlcyIsIkFycmF5IiwiZmlsbCIsImhhbmRsZUNsaWNrIiwiaSIsInNsaWNlIiwic2V0U3RhdGUiLCJyZW5kZXJTcXVhcmUiLCJyZW5kZXIiLCJzdGF0dXMiXSwibWFwcGluZ3MiOiJBQUFBLE9BQU9BLE1BQVAsTUFBbUIsYUFBbkI7O0FBRUEsTUFBTUMsS0FBTixTQUFvQkMsS0FBSyxDQUFDQyxTQUExQixDQUFvQztBQUNsQ0MsRUFBQUEsV0FBVyxDQUFDQyxLQUFELEVBQVE7QUFDakIsVUFBTUEsS0FBTjtBQUVBLFNBQUtDLEtBQUwsR0FBYTtBQUNYQyxNQUFBQSxPQUFPLEVBQUVDLEtBQUssQ0FBQyxDQUFELENBQUwsQ0FBU0MsSUFBVCxDQUFjLElBQWQ7QUFERSxLQUFiO0FBR0Q7O0FBRURDLEVBQUFBLFdBQVcsQ0FBQ0MsQ0FBRCxFQUFJO0FBQ2I7QUFDQSxVQUFNSixPQUFPLEdBQUcsS0FBS0QsS0FBTCxDQUFXQyxPQUFYLENBQW1CSyxLQUFuQixFQUFoQixDQUZhLENBR2I7O0FBQ0FMLElBQUFBLE9BQU8sQ0FBQ0ksQ0FBRCxDQUFQLEdBQWEsR0FBYixDQUphLENBS2I7O0FBQ0EsU0FBS0UsUUFBTCxDQUFjO0FBQUNOLE1BQUFBLE9BQU8sRUFBRUE7QUFBVixLQUFkO0FBQ0Q7O0FBRURPLEVBQUFBLFlBQVksQ0FBQ0gsQ0FBRCxFQUFJO0FBQ2Qsd0JBQ0Usb0JBQUMsTUFBRDtBQUNFLE1BQUEsS0FBSyxFQUFJLEtBQUtMLEtBQUwsQ0FBV0MsT0FBWCxDQUFtQkksQ0FBbkIsQ0FEWDtBQUVFLE1BQUEsT0FBTyxFQUFJLE1BQU0sS0FBS0QsV0FBTCxDQUFpQkMsQ0FBakI7QUFGbkIsTUFERjtBQU1EOztBQUVESSxFQUFBQSxNQUFNLEdBQUc7QUFDUCxVQUFNQyxNQUFNLEdBQUcsZ0JBQWY7QUFFQSx3QkFDRSw4Q0FDRTtBQUFLLE1BQUEsU0FBUyxFQUFHO0FBQWpCLE9BQTJCQSxNQUEzQixDQURGLGVBRUU7QUFBSyxNQUFBLFNBQVMsRUFBRztBQUFqQixPQUNHLEtBQUtGLFlBQUwsQ0FBa0IsQ0FBbEIsQ0FESCxFQUVHLEtBQUtBLFlBQUwsQ0FBa0IsQ0FBbEIsQ0FGSCxFQUdHLEtBQUtBLFlBQUwsQ0FBa0IsQ0FBbEIsQ0FISCxDQUZGLGVBT0U7QUFBSyxNQUFBLFNBQVMsRUFBRztBQUFqQixPQUNHLEtBQUtBLFlBQUwsQ0FBa0IsQ0FBbEIsQ0FESCxFQUVHLEtBQUtBLFlBQUwsQ0FBa0IsQ0FBbEIsQ0FGSCxFQUdHLEtBQUtBLFlBQUwsQ0FBa0IsQ0FBbEIsQ0FISCxDQVBGLGVBWUU7QUFBSyxNQUFBLFNBQVMsRUFBRztBQUFqQixPQUNHLEtBQUtBLFlBQUwsQ0FBa0IsQ0FBbEIsQ0FESCxFQUVHLEtBQUtBLFlBQUwsQ0FBa0IsQ0FBbEIsQ0FGSCxFQUdHLEtBQUtBLFlBQUwsQ0FBa0IsQ0FBbEIsQ0FISCxDQVpGLENBREY7QUFvQkQ7O0FBbERpQzs7QUFxRHBDLGVBQWViLEtBQWYiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgU3F1YXJlIGZyb20gJy4vU3F1YXJlLmpzJ1xuXG5jbGFzcyBCb2FyZCBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpXG5cbiAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgc3F1YXJlczogQXJyYXkoOSkuZmlsbChudWxsKVxuICAgIH1cbiAgfVxuXG4gIGhhbmRsZUNsaWNrKGkpIHtcbiAgICAvLyBtYWtlIGEgY29weSBvZiB0aGlzLnN0YXRlLnNxdWFyZXMgYmVjYXVzZSB3ZSBkb24ndCB3YW50IHRvIGFmZmVjdCBpdCBkaXJlY3RseVxuICAgIGNvbnN0IHNxdWFyZXMgPSB0aGlzLnN0YXRlLnNxdWFyZXMuc2xpY2UoKVxuICAgIC8vIGFzc2lnbiAnWCcgdG8gdGhlIHNxdWFyZXMgdGhhdCBpcyBjbGlja2VkXG4gICAgc3F1YXJlc1tpXSA9ICdYJztcbiAgICAvLyB1cGRhdGUgdGhpcy5zdGF0ZS5zcXVhcmVzIHdpdGggY29weSBvZiB0aGlzLnN0YXRlLnNxdWFyZXNcbiAgICB0aGlzLnNldFN0YXRlKHtzcXVhcmVzOiBzcXVhcmVzfSlcbiAgfVxuXG4gIHJlbmRlclNxdWFyZShpKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxTcXVhcmVcbiAgICAgICAgdmFsdWUgPSB7dGhpcy5zdGF0ZS5zcXVhcmVzW2ldfVxuICAgICAgICBvbkNsaWNrID0geygpID0+IHRoaXMuaGFuZGxlQ2xpY2soaSl9XG4gICAgICAvPlxuICAgIClcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBjb25zdCBzdGF0dXMgPSAnTmV4dCBQbGF5ZXI6IFgnXG5cbiAgICByZXR1cm4gKFxuICAgICAgPGRpdj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWUgPSAnc3RhdHVzJz57c3RhdHVzfTwvZGl2PlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZSA9ICdyb3cnPlxuICAgICAgICAgIHt0aGlzLnJlbmRlclNxdWFyZSgwKX1cbiAgICAgICAgICB7dGhpcy5yZW5kZXJTcXVhcmUoMSl9XG4gICAgICAgICAge3RoaXMucmVuZGVyU3F1YXJlKDIpfVxuICAgICAgICA8L2Rpdj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWUgPSAncm93Jz5cbiAgICAgICAgICB7dGhpcy5yZW5kZXJTcXVhcmUoNCl9XG4gICAgICAgICAge3RoaXMucmVuZGVyU3F1YXJlKDUpfVxuICAgICAgICAgIHt0aGlzLnJlbmRlclNxdWFyZSg2KX1cbiAgICAgICAgPC9kaXY+XG4gICAgICAgIDxkaXYgY2xhc3NOYW1lID0gJ3Jvdyc+XG4gICAgICAgICAge3RoaXMucmVuZGVyU3F1YXJlKDcpfVxuICAgICAgICAgIHt0aGlzLnJlbmRlclNxdWFyZSg4KX1cbiAgICAgICAgICB7dGhpcy5yZW5kZXJTcXVhcmUoOSl9XG4gICAgICAgIDwvZGl2PlxuICAgICAgPC9kaXY+XG4gICAgKVxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEJvYXJkIl19