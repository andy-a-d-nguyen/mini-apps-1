class AddressForm extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      addrLineOne: '',
      addrLineTwo: '',
      city: '',
      state: '',
      zipCode: '',
      phoneNum: ''
    };
    this.storeInput = this.storeInput.bind(this);
    this.submitInput = this.submitInput.bind(this);
  }

  storeInput(event) {
    this.setState({
      [event.target.name]: event.target.value
    });
  }

  submitInput(event) {
    event.preventDefault();
    this.props.addUserInfo(this.state);
  }

  render() {
    return /*#__PURE__*/React.createElement("form", {
      onSubmit: this.submitInput
    }, /*#__PURE__*/React.createElement("label", null, "Address Line 1:", /*#__PURE__*/React.createElement("input", {
      type: "text",
      name: "addrLineOne",
      value: this.state.addrLineOne,
      onChange: this.storeInput
    })), /*#__PURE__*/React.createElement("label", null, "Address Line 2:", /*#__PURE__*/React.createElement("input", {
      type: "text",
      name: "addrLineTwo",
      value: this.state.addrLineTwo,
      onChange: this.storeInput
    })), /*#__PURE__*/React.createElement("label", null, "City:", /*#__PURE__*/React.createElement("input", {
      type: "text",
      name: "city",
      value: this.state.city,
      onChange: this.storeInput
    })), /*#__PURE__*/React.createElement("label", null, "State:", /*#__PURE__*/React.createElement("input", {
      type: "text",
      name: "state",
      value: this.state.state,
      onChange: this.storeInput
    })), /*#__PURE__*/React.createElement("label", null, "Zip Code:", /*#__PURE__*/React.createElement("input", {
      type: "text",
      name: "zipCode",
      value: this.state.zipCode,
      onChange: this.storeInput
    })), /*#__PURE__*/React.createElement("label", null, "Phone Number:", /*#__PURE__*/React.createElement("input", {
      type: "text",
      name: "phoneNum",
      value: this.state.phoneNum,
      onChange: this.storeInput
    })));
  }

}

export default AddressForm;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2NsaWVudC9jb21wb25lbnRzL0FkZHJlc3NGb3JtLmpzeCJdLCJuYW1lcyI6WyJBZGRyZXNzRm9ybSIsIlJlYWN0IiwiQ29tcG9uZW50IiwiY29uc3RydWN0b3IiLCJwcm9wcyIsInN0YXRlIiwiYWRkckxpbmVPbmUiLCJhZGRyTGluZVR3byIsImNpdHkiLCJ6aXBDb2RlIiwicGhvbmVOdW0iLCJzdG9yZUlucHV0IiwiYmluZCIsInN1Ym1pdElucHV0IiwiZXZlbnQiLCJzZXRTdGF0ZSIsInRhcmdldCIsIm5hbWUiLCJ2YWx1ZSIsInByZXZlbnREZWZhdWx0IiwiYWRkVXNlckluZm8iLCJyZW5kZXIiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFdBQU4sU0FBMEJDLEtBQUssQ0FBQ0MsU0FBaEMsQ0FBMEM7QUFDeENDLEVBQUFBLFdBQVcsQ0FBQ0MsS0FBRCxFQUFRO0FBQ2pCLFVBQU1BLEtBQU47QUFFQSxTQUFLQyxLQUFMLEdBQWE7QUFDWEMsTUFBQUEsV0FBVyxFQUFFLEVBREY7QUFFWEMsTUFBQUEsV0FBVyxFQUFFLEVBRkY7QUFHWEMsTUFBQUEsSUFBSSxFQUFFLEVBSEs7QUFJWEgsTUFBQUEsS0FBSyxFQUFFLEVBSkk7QUFLWEksTUFBQUEsT0FBTyxFQUFFLEVBTEU7QUFNWEMsTUFBQUEsUUFBUSxFQUFFO0FBTkMsS0FBYjtBQVNBLFNBQUtDLFVBQUwsR0FBa0IsS0FBS0EsVUFBTCxDQUFnQkMsSUFBaEIsQ0FBcUIsSUFBckIsQ0FBbEI7QUFDQSxTQUFLQyxXQUFMLEdBQW1CLEtBQUtBLFdBQUwsQ0FBaUJELElBQWpCLENBQXNCLElBQXRCLENBQW5CO0FBQ0Q7O0FBRURELEVBQUFBLFVBQVUsQ0FBQ0csS0FBRCxFQUFRO0FBQ2hCLFNBQUtDLFFBQUwsQ0FBYztBQUFDLE9BQUNELEtBQUssQ0FBQ0UsTUFBTixDQUFhQyxJQUFkLEdBQXFCSCxLQUFLLENBQUNFLE1BQU4sQ0FBYUU7QUFBbkMsS0FBZDtBQUNEOztBQUVETCxFQUFBQSxXQUFXLENBQUNDLEtBQUQsRUFBUTtBQUNqQkEsSUFBQUEsS0FBSyxDQUFDSyxjQUFOO0FBQ0EsU0FBS2YsS0FBTCxDQUFXZ0IsV0FBWCxDQUF1QixLQUFLZixLQUE1QjtBQUNEOztBQUVEZ0IsRUFBQUEsTUFBTSxHQUFHO0FBQ1Asd0JBQ0U7QUFBTSxNQUFBLFFBQVEsRUFBSSxLQUFLUjtBQUF2QixvQkFDRSxtRUFFRTtBQUFPLE1BQUEsSUFBSSxFQUFHLE1BQWQ7QUFBcUIsTUFBQSxJQUFJLEVBQUcsYUFBNUI7QUFBMEMsTUFBQSxLQUFLLEVBQUksS0FBS1IsS0FBTCxDQUFXQyxXQUE5RDtBQUEyRSxNQUFBLFFBQVEsRUFBSSxLQUFLSztBQUE1RixNQUZGLENBREYsZUFLRSxtRUFFRTtBQUFPLE1BQUEsSUFBSSxFQUFHLE1BQWQ7QUFBcUIsTUFBQSxJQUFJLEVBQUcsYUFBNUI7QUFBMEMsTUFBQSxLQUFLLEVBQUksS0FBS04sS0FBTCxDQUFXRSxXQUE5RDtBQUEyRSxNQUFBLFFBQVEsRUFBSSxLQUFLSTtBQUE1RixNQUZGLENBTEYsZUFTRSx5REFFRTtBQUFPLE1BQUEsSUFBSSxFQUFHLE1BQWQ7QUFBcUIsTUFBQSxJQUFJLEVBQUcsTUFBNUI7QUFBbUMsTUFBQSxLQUFLLEVBQUksS0FBS04sS0FBTCxDQUFXRyxJQUF2RDtBQUE2RCxNQUFBLFFBQVEsRUFBSSxLQUFLRztBQUE5RSxNQUZGLENBVEYsZUFhRSwwREFFRTtBQUFPLE1BQUEsSUFBSSxFQUFHLE1BQWQ7QUFBcUIsTUFBQSxJQUFJLEVBQUcsT0FBNUI7QUFBb0MsTUFBQSxLQUFLLEVBQUksS0FBS04sS0FBTCxDQUFXQSxLQUF4RDtBQUErRCxNQUFBLFFBQVEsRUFBSSxLQUFLTTtBQUFoRixNQUZGLENBYkYsZUFpQkUsNkRBRUU7QUFBTyxNQUFBLElBQUksRUFBRyxNQUFkO0FBQXFCLE1BQUEsSUFBSSxFQUFHLFNBQTVCO0FBQXNDLE1BQUEsS0FBSyxFQUFJLEtBQUtOLEtBQUwsQ0FBV0ksT0FBMUQ7QUFBbUUsTUFBQSxRQUFRLEVBQUksS0FBS0U7QUFBcEYsTUFGRixDQWpCRixlQXFCRSxpRUFFRTtBQUFPLE1BQUEsSUFBSSxFQUFHLE1BQWQ7QUFBcUIsTUFBQSxJQUFJLEVBQUcsVUFBNUI7QUFBdUMsTUFBQSxLQUFLLEVBQUksS0FBS04sS0FBTCxDQUFXSyxRQUEzRDtBQUFxRSxNQUFBLFFBQVEsRUFBSSxLQUFLQztBQUF0RixNQUZGLENBckJGLENBREY7QUE0QkQ7O0FBdkR1Qzs7QUEwRDFDLGVBQWVYLFdBQWYiLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBBZGRyZXNzRm9ybSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuXG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIGFkZHJMaW5lT25lOiAnJyxcbiAgICAgIGFkZHJMaW5lVHdvOiAnJyxcbiAgICAgIGNpdHk6ICcnLFxuICAgICAgc3RhdGU6ICcnLFxuICAgICAgemlwQ29kZTogJycsXG4gICAgICBwaG9uZU51bTogJydcbiAgICB9XG5cbiAgICB0aGlzLnN0b3JlSW5wdXQgPSB0aGlzLnN0b3JlSW5wdXQuYmluZCh0aGlzKTtcbiAgICB0aGlzLnN1Ym1pdElucHV0ID0gdGhpcy5zdWJtaXRJbnB1dC5iaW5kKHRoaXMpO1xuICB9XG5cbiAgc3RvcmVJbnB1dChldmVudCkge1xuICAgIHRoaXMuc2V0U3RhdGUoe1tldmVudC50YXJnZXQubmFtZV06IGV2ZW50LnRhcmdldC52YWx1ZX0pO1xuICB9XG5cbiAgc3VibWl0SW5wdXQoZXZlbnQpIHtcbiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIHRoaXMucHJvcHMuYWRkVXNlckluZm8odGhpcy5zdGF0ZSk7XG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgcmV0dXJuIChcbiAgICAgIDxmb3JtIG9uU3VibWl0ID0ge3RoaXMuc3VibWl0SW5wdXR9PlxuICAgICAgICA8bGFiZWw+XG4gICAgICAgICAgQWRkcmVzcyBMaW5lIDE6XG4gICAgICAgICAgPGlucHV0IHR5cGUgPSAndGV4dCcgbmFtZSA9ICdhZGRyTGluZU9uZScgdmFsdWUgPSB7dGhpcy5zdGF0ZS5hZGRyTGluZU9uZX0gb25DaGFuZ2UgPSB7dGhpcy5zdG9yZUlucHV0fS8+XG4gICAgICAgIDwvbGFiZWw+XG4gICAgICAgIDxsYWJlbD5cbiAgICAgICAgICBBZGRyZXNzIExpbmUgMjpcbiAgICAgICAgICA8aW5wdXQgdHlwZSA9ICd0ZXh0JyBuYW1lID0gJ2FkZHJMaW5lVHdvJyB2YWx1ZSA9IHt0aGlzLnN0YXRlLmFkZHJMaW5lVHdvfSBvbkNoYW5nZSA9IHt0aGlzLnN0b3JlSW5wdXR9Lz5cbiAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgPGxhYmVsPlxuICAgICAgICAgIENpdHk6XG4gICAgICAgICAgPGlucHV0IHR5cGUgPSAndGV4dCcgbmFtZSA9ICdjaXR5JyB2YWx1ZSA9IHt0aGlzLnN0YXRlLmNpdHl9IG9uQ2hhbmdlID0ge3RoaXMuc3RvcmVJbnB1dH0vPlxuICAgICAgICA8L2xhYmVsPlxuICAgICAgICA8bGFiZWw+XG4gICAgICAgICAgU3RhdGU6XG4gICAgICAgICAgPGlucHV0IHR5cGUgPSAndGV4dCcgbmFtZSA9ICdzdGF0ZScgdmFsdWUgPSB7dGhpcy5zdGF0ZS5zdGF0ZX0gb25DaGFuZ2UgPSB7dGhpcy5zdG9yZUlucHV0fS8+XG4gICAgICAgIDwvbGFiZWw+XG4gICAgICAgIDxsYWJlbD5cbiAgICAgICAgICBaaXAgQ29kZTpcbiAgICAgICAgICA8aW5wdXQgdHlwZSA9ICd0ZXh0JyBuYW1lID0gJ3ppcENvZGUnIHZhbHVlID0ge3RoaXMuc3RhdGUuemlwQ29kZX0gb25DaGFuZ2UgPSB7dGhpcy5zdG9yZUlucHV0fS8+XG4gICAgICAgIDwvbGFiZWw+XG4gICAgICAgIDxsYWJlbD5cbiAgICAgICAgICBQaG9uZSBOdW1iZXI6XG4gICAgICAgICAgPGlucHV0IHR5cGUgPSAndGV4dCcgbmFtZSA9ICdwaG9uZU51bScgdmFsdWUgPSB7dGhpcy5zdGF0ZS5waG9uZU51bX0gb25DaGFuZ2UgPSB7dGhpcy5zdG9yZUlucHV0fS8+XG4gICAgICAgIDwvbGFiZWw+XG4gICAgICA8L2Zvcm0+XG4gICAgKVxuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IEFkZHJlc3NGb3JtOyJdfQ==