class AddressForm extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      addrLineOne: '',
      addrLineTwo: '',
      city: '',
      state: '',
      zipCode: '',
      phoneNum: ''
    };
    this.storeInput = this.storeInput.bind(this);
    this.submitInput = this.submitInput.bind(this);
  }

  storeInput(event) {
    this.setState({
      [event.target.name]: event.target.value
    });
  }

  submitInput(event) {
    event.preventDefault();
    this.props.addUserInfo(this.state);
  }

  render() {
    return /*#__PURE__*/React.createElement("form", {
      onSubmit: this.submitInput
    }, /*#__PURE__*/React.createElement("label", null, "Address Line 1:", /*#__PURE__*/React.createElement("input", {
      type: "text",
      name: "addrLineOne",
      value: this.state.addrLineOne,
      onChange: this.storeInput
    })), /*#__PURE__*/React.createElement("label", null, "Address Line 2:", /*#__PURE__*/React.createElement("input", {
      type: "text",
      name: "addrLineTwo",
      value: this.state.addrLineTwo,
      onChange: this.storeInput
    })), /*#__PURE__*/React.createElement("label", null, "City:", /*#__PURE__*/React.createElement("input", {
      type: "text",
      name: "city",
      value: this.state.city,
      onChange: this.storeInput
    })), /*#__PURE__*/React.createElement("label", null, "State:", /*#__PURE__*/React.createElement("input", {
      type: "text",
      name: "state",
      value: this.state.state,
      onChange: this.storeInput
    })), /*#__PURE__*/React.createElement("label", null, "Zip Code:", /*#__PURE__*/React.createElement("input", {
      type: "text",
      name: "zipCode",
      value: this.state.zipCode,
      onChange: this.storeInput
    })), /*#__PURE__*/React.createElement("label", null, "Phone Number:", /*#__PURE__*/React.createElement("input", {
      type: "text",
      name: "phoneNum",
      value: this.state.phoneNum,
      onChange: this.storeInput
    })), /*#__PURE__*/React.createElement("button", null, "Next"));
  }

}

export default AddressForm;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2NsaWVudC9jb21wb25lbnRzL0FkZHJlc3NGb3JtLmpzeCJdLCJuYW1lcyI6WyJBZGRyZXNzRm9ybSIsIlJlYWN0IiwiQ29tcG9uZW50IiwiY29uc3RydWN0b3IiLCJwcm9wcyIsInN0YXRlIiwiYWRkckxpbmVPbmUiLCJhZGRyTGluZVR3byIsImNpdHkiLCJ6aXBDb2RlIiwicGhvbmVOdW0iLCJzdG9yZUlucHV0IiwiYmluZCIsInN1Ym1pdElucHV0IiwiZXZlbnQiLCJzZXRTdGF0ZSIsInRhcmdldCIsIm5hbWUiLCJ2YWx1ZSIsInByZXZlbnREZWZhdWx0IiwiYWRkVXNlckluZm8iLCJyZW5kZXIiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLFdBQU4sU0FBMEJDLEtBQUssQ0FBQ0MsU0FBaEMsQ0FBMEM7QUFDeENDLEVBQUFBLFdBQVcsQ0FBQ0MsS0FBRCxFQUFRO0FBQ2pCLFVBQU1BLEtBQU47QUFFQSxTQUFLQyxLQUFMLEdBQWE7QUFDWEMsTUFBQUEsV0FBVyxFQUFFLEVBREY7QUFFWEMsTUFBQUEsV0FBVyxFQUFFLEVBRkY7QUFHWEMsTUFBQUEsSUFBSSxFQUFFLEVBSEs7QUFJWEgsTUFBQUEsS0FBSyxFQUFFLEVBSkk7QUFLWEksTUFBQUEsT0FBTyxFQUFFLEVBTEU7QUFNWEMsTUFBQUEsUUFBUSxFQUFFO0FBTkMsS0FBYjtBQVNBLFNBQUtDLFVBQUwsR0FBa0IsS0FBS0EsVUFBTCxDQUFnQkMsSUFBaEIsQ0FBcUIsSUFBckIsQ0FBbEI7QUFDQSxTQUFLQyxXQUFMLEdBQW1CLEtBQUtBLFdBQUwsQ0FBaUJELElBQWpCLENBQXNCLElBQXRCLENBQW5CO0FBQ0Q7O0FBRURELEVBQUFBLFVBQVUsQ0FBQ0csS0FBRCxFQUFRO0FBQ2hCLFNBQUtDLFFBQUwsQ0FBYztBQUFDLE9BQUNELEtBQUssQ0FBQ0UsTUFBTixDQUFhQyxJQUFkLEdBQXFCSCxLQUFLLENBQUNFLE1BQU4sQ0FBYUU7QUFBbkMsS0FBZDtBQUNEOztBQUVETCxFQUFBQSxXQUFXLENBQUNDLEtBQUQsRUFBUTtBQUNqQkEsSUFBQUEsS0FBSyxDQUFDSyxjQUFOO0FBQ0EsU0FBS2YsS0FBTCxDQUFXZ0IsV0FBWCxDQUF1QixLQUFLZixLQUE1QjtBQUNEOztBQUVEZ0IsRUFBQUEsTUFBTSxHQUFHO0FBQ1Asd0JBQ0U7QUFBTSxNQUFBLFFBQVEsRUFBSSxLQUFLUjtBQUF2QixvQkFDRSxtRUFFRTtBQUFPLE1BQUEsSUFBSSxFQUFHLE1BQWQ7QUFBcUIsTUFBQSxJQUFJLEVBQUcsYUFBNUI7QUFBMEMsTUFBQSxLQUFLLEVBQUksS0FBS1IsS0FBTCxDQUFXQyxXQUE5RDtBQUEyRSxNQUFBLFFBQVEsRUFBSSxLQUFLSztBQUE1RixNQUZGLENBREYsZUFLRSxtRUFFRTtBQUFPLE1BQUEsSUFBSSxFQUFHLE1BQWQ7QUFBcUIsTUFBQSxJQUFJLEVBQUcsYUFBNUI7QUFBMEMsTUFBQSxLQUFLLEVBQUksS0FBS04sS0FBTCxDQUFXRSxXQUE5RDtBQUEyRSxNQUFBLFFBQVEsRUFBSSxLQUFLSTtBQUE1RixNQUZGLENBTEYsZUFTRSx5REFFRTtBQUFPLE1BQUEsSUFBSSxFQUFHLE1BQWQ7QUFBcUIsTUFBQSxJQUFJLEVBQUcsTUFBNUI7QUFBbUMsTUFBQSxLQUFLLEVBQUksS0FBS04sS0FBTCxDQUFXRyxJQUF2RDtBQUE2RCxNQUFBLFFBQVEsRUFBSSxLQUFLRztBQUE5RSxNQUZGLENBVEYsZUFhRSwwREFFRTtBQUFPLE1BQUEsSUFBSSxFQUFHLE1BQWQ7QUFBcUIsTUFBQSxJQUFJLEVBQUcsT0FBNUI7QUFBb0MsTUFBQSxLQUFLLEVBQUksS0FBS04sS0FBTCxDQUFXQSxLQUF4RDtBQUErRCxNQUFBLFFBQVEsRUFBSSxLQUFLTTtBQUFoRixNQUZGLENBYkYsZUFpQkUsNkRBRUU7QUFBTyxNQUFBLElBQUksRUFBRyxNQUFkO0FBQXFCLE1BQUEsSUFBSSxFQUFHLFNBQTVCO0FBQXNDLE1BQUEsS0FBSyxFQUFJLEtBQUtOLEtBQUwsQ0FBV0ksT0FBMUQ7QUFBbUUsTUFBQSxRQUFRLEVBQUksS0FBS0U7QUFBcEYsTUFGRixDQWpCRixlQXFCRSxpRUFFRTtBQUFPLE1BQUEsSUFBSSxFQUFHLE1BQWQ7QUFBcUIsTUFBQSxJQUFJLEVBQUcsVUFBNUI7QUFBdUMsTUFBQSxLQUFLLEVBQUksS0FBS04sS0FBTCxDQUFXSyxRQUEzRDtBQUFxRSxNQUFBLFFBQVEsRUFBSSxLQUFLQztBQUF0RixNQUZGLENBckJGLGVBeUJFLDJDQXpCRixDQURGO0FBNkJEOztBQXhEdUM7O0FBMkQxQyxlQUFlWCxXQUFmIiwic291cmNlc0NvbnRlbnQiOlsiY2xhc3MgQWRkcmVzc0Zvcm0gZXh0ZW5kcyBSZWFjdC5Db21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKTtcblxuICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICBhZGRyTGluZU9uZTogJycsXG4gICAgICBhZGRyTGluZVR3bzogJycsXG4gICAgICBjaXR5OiAnJyxcbiAgICAgIHN0YXRlOiAnJyxcbiAgICAgIHppcENvZGU6ICcnLFxuICAgICAgcGhvbmVOdW06ICcnXG4gICAgfVxuXG4gICAgdGhpcy5zdG9yZUlucHV0ID0gdGhpcy5zdG9yZUlucHV0LmJpbmQodGhpcyk7XG4gICAgdGhpcy5zdWJtaXRJbnB1dCA9IHRoaXMuc3VibWl0SW5wdXQuYmluZCh0aGlzKTtcbiAgfVxuXG4gIHN0b3JlSW5wdXQoZXZlbnQpIHtcbiAgICB0aGlzLnNldFN0YXRlKHtbZXZlbnQudGFyZ2V0Lm5hbWVdOiBldmVudC50YXJnZXQudmFsdWV9KTtcbiAgfVxuXG4gIHN1Ym1pdElucHV0KGV2ZW50KSB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICB0aGlzLnByb3BzLmFkZFVzZXJJbmZvKHRoaXMuc3RhdGUpO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8Zm9ybSBvblN1Ym1pdCA9IHt0aGlzLnN1Ym1pdElucHV0fT5cbiAgICAgICAgPGxhYmVsPlxuICAgICAgICAgIEFkZHJlc3MgTGluZSAxOlxuICAgICAgICAgIDxpbnB1dCB0eXBlID0gJ3RleHQnIG5hbWUgPSAnYWRkckxpbmVPbmUnIHZhbHVlID0ge3RoaXMuc3RhdGUuYWRkckxpbmVPbmV9IG9uQ2hhbmdlID0ge3RoaXMuc3RvcmVJbnB1dH0vPlxuICAgICAgICA8L2xhYmVsPlxuICAgICAgICA8bGFiZWw+XG4gICAgICAgICAgQWRkcmVzcyBMaW5lIDI6XG4gICAgICAgICAgPGlucHV0IHR5cGUgPSAndGV4dCcgbmFtZSA9ICdhZGRyTGluZVR3bycgdmFsdWUgPSB7dGhpcy5zdGF0ZS5hZGRyTGluZVR3b30gb25DaGFuZ2UgPSB7dGhpcy5zdG9yZUlucHV0fS8+XG4gICAgICAgIDwvbGFiZWw+XG4gICAgICAgIDxsYWJlbD5cbiAgICAgICAgICBDaXR5OlxuICAgICAgICAgIDxpbnB1dCB0eXBlID0gJ3RleHQnIG5hbWUgPSAnY2l0eScgdmFsdWUgPSB7dGhpcy5zdGF0ZS5jaXR5fSBvbkNoYW5nZSA9IHt0aGlzLnN0b3JlSW5wdXR9Lz5cbiAgICAgICAgPC9sYWJlbD5cbiAgICAgICAgPGxhYmVsPlxuICAgICAgICAgIFN0YXRlOlxuICAgICAgICAgIDxpbnB1dCB0eXBlID0gJ3RleHQnIG5hbWUgPSAnc3RhdGUnIHZhbHVlID0ge3RoaXMuc3RhdGUuc3RhdGV9IG9uQ2hhbmdlID0ge3RoaXMuc3RvcmVJbnB1dH0vPlxuICAgICAgICA8L2xhYmVsPlxuICAgICAgICA8bGFiZWw+XG4gICAgICAgICAgWmlwIENvZGU6XG4gICAgICAgICAgPGlucHV0IHR5cGUgPSAndGV4dCcgbmFtZSA9ICd6aXBDb2RlJyB2YWx1ZSA9IHt0aGlzLnN0YXRlLnppcENvZGV9IG9uQ2hhbmdlID0ge3RoaXMuc3RvcmVJbnB1dH0vPlxuICAgICAgICA8L2xhYmVsPlxuICAgICAgICA8bGFiZWw+XG4gICAgICAgICAgUGhvbmUgTnVtYmVyOlxuICAgICAgICAgIDxpbnB1dCB0eXBlID0gJ3RleHQnIG5hbWUgPSAncGhvbmVOdW0nIHZhbHVlID0ge3RoaXMuc3RhdGUucGhvbmVOdW19IG9uQ2hhbmdlID0ge3RoaXMuc3RvcmVJbnB1dH0vPlxuICAgICAgICA8L2xhYmVsPlxuICAgICAgICA8YnV0dG9uPk5leHQ8L2J1dHRvbj5cbiAgICAgIDwvZm9ybT5cbiAgICApXG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgQWRkcmVzc0Zvcm07Il19