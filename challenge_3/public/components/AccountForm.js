class AccountForm extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      name: '',
      email: '',
      password: ''
    };
    this.storeInput = this.storeInput.bind(this);
    this.submitInput = this.submitInput.bind(this);
  }

  storeInput(event) {
    this.setState({
      [event.target.name]: event.target.value
    });
  }

  submitInput(event) {
    event.preventDefault();
    this.props.addUserInfo(this.state);
  }

  render() {
    return /*#__PURE__*/React.createElement("form", {
      onSubmit: (this.submitInput, this.props.renderAddressForm)
    }, /*#__PURE__*/React.createElement("label", null, "Name:", /*#__PURE__*/React.createElement("input", {
      type: "text",
      name: "name",
      value: this.state.name,
      onChange: this.storeInput
    })), /*#__PURE__*/React.createElement("label", null, "Email:", /*#__PURE__*/React.createElement("input", {
      type: "email",
      name: "email",
      value: this.state.email,
      onChange: this.storeInput
    })), /*#__PURE__*/React.createElement("label", null, "Password:", /*#__PURE__*/React.createElement("input", {
      type: "password",
      name: "password",
      value: this.state.password,
      onChange: this.storeInput
    })), /*#__PURE__*/React.createElement("button", null, "Next"));
  }

} // on click of button, invoke a function passed down from Checkout to render address form


export default AccountForm;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2NsaWVudC9jb21wb25lbnRzL0FjY291bnRGb3JtLmpzeCJdLCJuYW1lcyI6WyJBY2NvdW50Rm9ybSIsIlJlYWN0IiwiQ29tcG9uZW50IiwiY29uc3RydWN0b3IiLCJwcm9wcyIsInN0YXRlIiwibmFtZSIsImVtYWlsIiwicGFzc3dvcmQiLCJzdG9yZUlucHV0IiwiYmluZCIsInN1Ym1pdElucHV0IiwiZXZlbnQiLCJzZXRTdGF0ZSIsInRhcmdldCIsInZhbHVlIiwicHJldmVudERlZmF1bHQiLCJhZGRVc2VySW5mbyIsInJlbmRlciIsInJlbmRlckFkZHJlc3NGb3JtIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxXQUFOLFNBQTBCQyxLQUFLLENBQUNDLFNBQWhDLENBQTBDO0FBQ3hDQyxFQUFBQSxXQUFXLENBQUNDLEtBQUQsRUFBUTtBQUNqQixVQUFNQSxLQUFOO0FBRUEsU0FBS0MsS0FBTCxHQUFhO0FBQ1hDLE1BQUFBLElBQUksRUFBRSxFQURLO0FBRVhDLE1BQUFBLEtBQUssRUFBRSxFQUZJO0FBR1hDLE1BQUFBLFFBQVEsRUFBRTtBQUhDLEtBQWI7QUFNQSxTQUFLQyxVQUFMLEdBQWtCLEtBQUtBLFVBQUwsQ0FBZ0JDLElBQWhCLENBQXFCLElBQXJCLENBQWxCO0FBQ0EsU0FBS0MsV0FBTCxHQUFtQixLQUFLQSxXQUFMLENBQWlCRCxJQUFqQixDQUFzQixJQUF0QixDQUFuQjtBQUNEOztBQUVERCxFQUFBQSxVQUFVLENBQUNHLEtBQUQsRUFBUTtBQUNoQixTQUFLQyxRQUFMLENBQWM7QUFBQyxPQUFDRCxLQUFLLENBQUNFLE1BQU4sQ0FBYVIsSUFBZCxHQUFxQk0sS0FBSyxDQUFDRSxNQUFOLENBQWFDO0FBQW5DLEtBQWQ7QUFDRDs7QUFFREosRUFBQUEsV0FBVyxDQUFDQyxLQUFELEVBQVE7QUFDakJBLElBQUFBLEtBQUssQ0FBQ0ksY0FBTjtBQUNBLFNBQUtaLEtBQUwsQ0FBV2EsV0FBWCxDQUF1QixLQUFLWixLQUE1QjtBQUNEOztBQUVEYSxFQUFBQSxNQUFNLEdBQUc7QUFDUCx3QkFDRTtBQUFNLE1BQUEsUUFBUSxHQUFJLEtBQUtQLFdBQUwsRUFBa0IsS0FBS1AsS0FBTCxDQUFXZSxpQkFBakM7QUFBZCxvQkFDRSx5REFFRTtBQUFPLE1BQUEsSUFBSSxFQUFHLE1BQWQ7QUFBcUIsTUFBQSxJQUFJLEVBQUcsTUFBNUI7QUFBbUMsTUFBQSxLQUFLLEVBQUksS0FBS2QsS0FBTCxDQUFXQyxJQUF2RDtBQUE2RCxNQUFBLFFBQVEsRUFBSSxLQUFLRztBQUE5RSxNQUZGLENBREYsZUFLRSwwREFFRTtBQUFPLE1BQUEsSUFBSSxFQUFHLE9BQWQ7QUFBc0IsTUFBQSxJQUFJLEVBQUcsT0FBN0I7QUFBcUMsTUFBQSxLQUFLLEVBQUksS0FBS0osS0FBTCxDQUFXRSxLQUF6RDtBQUFnRSxNQUFBLFFBQVEsRUFBSSxLQUFLRTtBQUFqRixNQUZGLENBTEYsZUFTRSw2REFFRTtBQUFPLE1BQUEsSUFBSSxFQUFHLFVBQWQ7QUFBeUIsTUFBQSxJQUFJLEVBQUcsVUFBaEM7QUFBMkMsTUFBQSxLQUFLLEVBQUksS0FBS0osS0FBTCxDQUFXRyxRQUEvRDtBQUF5RSxNQUFBLFFBQVEsRUFBSSxLQUFLQztBQUExRixNQUZGLENBVEYsZUFhRSwyQ0FiRixDQURGO0FBaUJEOztBQXpDdUMsQyxDQTJDMUM7OztBQUNBLGVBQWVULFdBQWYiLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBBY2NvdW50Rm9ybSBleHRlbmRzIFJlYWN0LkNvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpO1xuXG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIG5hbWU6ICcnLFxuICAgICAgZW1haWw6ICcnLFxuICAgICAgcGFzc3dvcmQ6ICcnXG4gICAgfVxuXG4gICAgdGhpcy5zdG9yZUlucHV0ID0gdGhpcy5zdG9yZUlucHV0LmJpbmQodGhpcyk7XG4gICAgdGhpcy5zdWJtaXRJbnB1dCA9IHRoaXMuc3VibWl0SW5wdXQuYmluZCh0aGlzKTtcbiAgfVxuXG4gIHN0b3JlSW5wdXQoZXZlbnQpIHtcbiAgICB0aGlzLnNldFN0YXRlKHtbZXZlbnQudGFyZ2V0Lm5hbWVdOiBldmVudC50YXJnZXQudmFsdWV9KTtcbiAgfVxuXG4gIHN1Ym1pdElucHV0KGV2ZW50KSB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICB0aGlzLnByb3BzLmFkZFVzZXJJbmZvKHRoaXMuc3RhdGUpO1xuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8Zm9ybSBvblN1Ym1pdCA9IHt0aGlzLnN1Ym1pdElucHV0LCB0aGlzLnByb3BzLnJlbmRlckFkZHJlc3NGb3JtfT5cbiAgICAgICAgPGxhYmVsPlxuICAgICAgICAgIE5hbWU6XG4gICAgICAgICAgPGlucHV0IHR5cGUgPSAndGV4dCcgbmFtZSA9ICduYW1lJyB2YWx1ZSA9IHt0aGlzLnN0YXRlLm5hbWV9IG9uQ2hhbmdlID0ge3RoaXMuc3RvcmVJbnB1dH0vPlxuICAgICAgICA8L2xhYmVsPlxuICAgICAgICA8bGFiZWw+XG4gICAgICAgICAgRW1haWw6XG4gICAgICAgICAgPGlucHV0IHR5cGUgPSAnZW1haWwnIG5hbWUgPSAnZW1haWwnIHZhbHVlID0ge3RoaXMuc3RhdGUuZW1haWx9IG9uQ2hhbmdlID0ge3RoaXMuc3RvcmVJbnB1dH0vPlxuICAgICAgICA8L2xhYmVsPlxuICAgICAgICA8bGFiZWw+XG4gICAgICAgICAgUGFzc3dvcmQ6XG4gICAgICAgICAgPGlucHV0IHR5cGUgPSAncGFzc3dvcmQnIG5hbWUgPSAncGFzc3dvcmQnIHZhbHVlID0ge3RoaXMuc3RhdGUucGFzc3dvcmR9IG9uQ2hhbmdlID0ge3RoaXMuc3RvcmVJbnB1dH0vPlxuICAgICAgICA8L2xhYmVsPlxuICAgICAgICA8YnV0dG9uPk5leHQ8L2J1dHRvbj5cbiAgICAgIDwvZm9ybT5cbiAgICApXG4gIH1cbn1cbi8vIG9uIGNsaWNrIG9mIGJ1dHRvbiwgaW52b2tlIGEgZnVuY3Rpb24gcGFzc2VkIGRvd24gZnJvbSBDaGVja291dCB0byByZW5kZXIgYWRkcmVzcyBmb3JtXG5leHBvcnQgZGVmYXVsdCBBY2NvdW50Rm9ybTsiXX0=